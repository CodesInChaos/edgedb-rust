commands:

  make: !Command
    description: Build the library
    container: ubuntu
    run: |
      cargo build --workspace --exclude=edgeql-pytest
      cargo build -p edgeql-pytest

  make-static: !Command
    description: Build executable
    container: ubuntu
    run: [cargo, build, --target=x86_64-unknown-linux-musl, -p, edgedb-repl]

  cargo: !Command
    description: Run arbitrary cargo command
    symlink-name: cargo
    container: ubuntu
    run: [cargo]

  cargo-expand: !Command
    description: Print macro-expanded form for the crate
    container: nightly
    run: [cargo, rustc, "--", -Zunstable-options, --pretty=expanded]

  test-py: !Command
    description: Run tests
    container: ubuntu
    prerequisites: [make]
    run: [cargo, test, -p, edgeql-pytest]

  test-rust: !Command
    description: Run tests
    container: ubuntu
    run: [cargo, test, --workspace, --exclude=edgeql-pytest]

  test-rust-no-features: !Command
    description: Run tests
    container: ubuntu
    work-dir: edgedb-protocol
    run: [cargo, test, --no-default-features]

  test: !Command
    description: Run tests
    container: ubuntu
    prerequisites: [test-rust, test-py, test-rust-no-features]
    run: "echo OK"

  _bulk: !Command
    description: Run `bulk` command (for version bookkeeping)
    container: ubuntu
    run: [bulk]

  repl: !Command
    description: Run edgedb repl
    container: ubuntu
    run: [cargo, run, --bin, edgedb, '--']

  server: !Command
    description: Run edgedb server
    container: ubuntu
    run: [cargo, run, --bin, edgedb-server, '--', '--data-dir', './tmp/db']

  py: !Command
    description: Build the python library and run python interpreter
    container: ubuntu
    run: |
      set -ex
      cargo build -p edgeql-python
      export PYTHONPATH=/work/edgeql-pytest
      python3.8 -i -c 'import edb._edgeql_rust' -v

  pytest-main: !Command
    description: Run binary from edgeql-pytest
    container: ubuntu
    run: [cargo, run, -p, edgeql-pytest]

  geiger: !Command
    description: Run geiger tool
    container: ubuntu
    run: [cargo, geiger]

  fuzz: !Command
    description: Run fuzz tool
    container: ubuntu
    run: [cargo, fuzz]

containers:

  ubuntu:
    setup:
    - !Ubuntu xenial
    - !UbuntuPPA deadsnakes/ppa
    - !AptTrust keys: [BA6932366A755776]
    - !Install
      - ca-certificates
      - git
      - build-essential
      - vim
      - musl-tools
      # for cargo geiger
      - libssl-dev
      - pkg-config
      # for edgeql-python
      - python3.8
      - python3.8-dev

    - !TarInstall
      url: "https://static.rust-lang.org/dist/rust-1.40.0-x86_64-unknown-linux-gnu.tar.gz"
      script: "./install.sh --prefix=/usr \
                --components=rustc,rust-std-x86_64-unknown-linux-gnu,cargo"
    - !TarInstall
      url: "https://static.rust-lang.org/dist/rust-std-1.40.0-x86_64-unknown-linux-musl.tar.gz"
      script: "./install.sh --prefix=/musl \
               --components=rust-std-x86_64-unknown-linux-musl"
    - !Env RUSTFLAGS: -g
    - !Sh 'cargo install cargo-geiger --root=/usr'
    - !Sh 'cargo install cargo-fuzz --root=/usr'
    #- !Sh 'cargo install cargo-tree --root=/usr'
    - !Sh 'ln -s /musl/lib/rustlib/x86_64-unknown-linux-musl /usr/lib/rustlib/x86_64-unknown-linux-musl'
    - &bulk !Tar
      url: "https://github.com/tailhook/bulk/releases/download/v0.4.10/bulk-v0.4.10.tar.gz"
      sha256: 481513f8a0306a9857d045497fb5b50b50a51e9ff748909ecf7d2bda1de275ab
      path: /

    environ:
      HOME: /work/target
      RUST_BACKTRACE: 1
      PYTHON_SYS_EXECUTABLE: /usr/bin/python3.8
      # needed for musl build
      PATH: /musl/bin:/usr/local/bin:/usr/bin:/bin
      LD_LIBRARY_PATH: /musl/lib/rustlib/x86_64-unknown-linux-musl/lib

  nightly:
    setup:
    - !Ubuntu xenial
    - !Install
      - ca-certificates
      - build-essential

    - !TarInstall
      url: "https://static.rust-lang.org/dist/rust-nightly-x86_64-unknown-linux-gnu.tar.gz"
      script: "./install.sh --prefix=/usr \
                --components=rustc,rust-std-x86_64-unknown-linux-gnu,cargo"

    environ:
      HOME: /work/target
      RUST_BACKTRACE: 1
